<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-4.0.xsd
                           http://www.springframework.org/schema/security/oauth2
                           http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd">


  <!--&lt;!&ndash; Authorization server &ndash;&gt;-->
  <!--<security:http pattern="/oauth/token/**" create-session="stateless"-->
  <!--authentication-manager-ref="clientAuthenticationManager">-->
  <!--<security:intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY"/>-->
  <!--<security:anonymous enabled="false"/>-->
  <!--<security:form-login-->
  <!--login-processing-url="/login"-->
  <!--username-parameter="username"-->
  <!--password-parameter="password"-->
  <!--authentication-failure-url="/error.jsp"-->
  <!--default-target-url="/index.jsp"/>-->
  <!--<security:logout logout-url="/logout" logout-success-url="/login"/>-->
  <!--</security:http>-->

  <!--&lt;!&ndash; Resource server &ndash;&gt;-->
  <!--<security:http pattern="/api/**" create-session="never" authentication-manager-ref="clientAuthenticationManager"-->
  <!--entry-point-ref="oauthAuthenticationEntryPoint">-->
  <!--<security:intercept-url pattern="/api/**" access="ROLE_USER"/>-->
  <!--<security:anonymous enabled="false"/>-->
  <!--<security:custom-filter ref="resourceServer" before="PRE_AUTH_FILTER"/>-->
  <!--</security:http>-->

  <!--<bean id="oauthAuthenticationEntryPoint"-->
  <!--class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">-->
  <!--<property name="realmName" value="test"/>-->
  <!--</bean>-->

  <!--&lt;!&ndash;<security:http auto-config="true" use-expressions="true" create-session="never">&ndash;&gt;-->
  <!--&lt;!&ndash;<security:intercept-url pattern="/**" access="permitAll"/>&ndash;&gt;-->
  <!--&lt;!&ndash;<security:form-login&ndash;&gt;-->
  <!--&lt;!&ndash;login-processing-url="/login"&ndash;&gt;-->
  <!--&lt;!&ndash;username-parameter="username"&ndash;&gt;-->
  <!--&lt;!&ndash;password-parameter="password"&ndash;&gt;-->
  <!--&lt;!&ndash;authentication-failure-url="/error.jsp"&ndash;&gt;-->
  <!--&lt;!&ndash;default-target-url="/index.jsp"/>&ndash;&gt;-->
  <!--&lt;!&ndash;<security:logout logout-url="/logout" logout-success-url="/login"/>&ndash;&gt;-->
  <!--&lt;!&ndash;<security:csrf disabled="true"/>&ndash;&gt;-->
  <!--&lt;!&ndash;</security:http>&ndash;&gt;-->

  <!--<security:authentication-manager alias="authenticationManager">-->
  <!--<security:authentication-provider>-->
  <!--<security:user-service>-->
  <!--<security:user name="user" password="pass" authorities="ROLE_USER"/>-->
  <!--</security:user-service>-->
  <!--</security:authentication-provider>-->
  <!--</security:authentication-manager>-->

  <!--<security:authentication-manager id="clientAuthenticationManager">-->
  <!--<security:authentication-provider user-service-ref="clientDetailsUserService"/>-->
  <!--</security:authentication-manager>-->

  <!--<bean id="clientDetailsUserService"-->
  <!--class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">-->
  <!--<constructor-arg ref="clientDetails"/>-->
  <!--</bean>-->

  <!--&lt;!&ndash; Authorization server &ndash;&gt;-->
  <!--<oauth:authorization-server client-details-service-ref="clientDetails" token-services-ref="tokenServices">-->
  <!--<oauth:authorization-code/>-->
  <!--</oauth:authorization-server>-->

  <!--<oauth:client-details-service id="clientDetails">-->
  <!--<oauth:client client-id="restapp"-->
  <!--secret="secret"-->
  <!--scope="read,write,trust"-->
  <!--authorized-grant-types="authorization_code"-->
  <!--authorities="ROLE_USER"/>-->
  <!--</oauth:client-details-service>-->

  <!--<bean id="tokenServices"-->
  <!--class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">-->
  <!--<property name="tokenStore" ref="tokenStore"/>-->
  <!--</bean>-->

  <!--<bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>-->

  <!--&lt;!&ndash; Resource server &ndash;&gt;-->
  <!--<oauth:resource-server id="resourceServer" token-services-ref="tokenServices"/>-->


  <!-- Authorization server -->
  <oauth:authorization-server client-details-service-ref="clientDetails" token-services-ref="tokenService">
    <oauth:authorization-code/>
  </oauth:authorization-server>

  <oauth:client-details-service id="clientDetails">
    <oauth:client client-id="restapp"
                  secret="secret"
                  scope="read"
                  resource-ids="rest-data"
                  authorized-grant-types="authorization_code"
                  authorities="ROLE_CLIENT"
                  redirect-uri="http://localhost:8080/"/>
  </oauth:client-details-service>

  <bean id="tokenService" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
    <property name="tokenStore" ref="tokenStore"/>
  </bean>
  <bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>

  <security:http pattern="/oauth/token"
                 create-session="stateless"
                 authentication-manager-ref="clientAuthenticationManager"
                 use-expressions="true"
                 entry-point-ref="clientAuthenticationEntryPoint">

    <security:http-basic/>

    <security:anonymous enabled="false"/>
    <security:intercept-url pattern="/oauth/token" access="hasRole('ROLE_CLIENT')"/>

    <security:custom-filter ref="clientCredentialsTokenEndpointFilter" after="BASIC_AUTH_FILTER"/>
    <!--<security:access-denied-handler ref="oauthAccessDeniedHandler"/>-->
    <!--<security:expression-handler ref="oauthWebExpressionHandler"/>-->

    <!--<security:csrf disabled="true"/>-->
  </security:http>

  <bean id="clientCredentialsTokenEndpointFilter"
        class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
    <property name="authenticationManager" ref="clientAuthenticationManager"/>
  </bean>

  <!-- Resource server -->
  <oauth:resource-server id="resourceServerFilter"
                         resource-id="rest-data"
                         token-services-ref="tokenService"/>

  <security:http pattern="/rest-data"
                 create-session="stateless"
                 authentication-manager-ref="clientAuthenticationManager"
                 use-expressions="true"
                 entry-point-ref="clientAuthenticationEntryPoint">

    <security:anonymous enabled="false"/>
    <security:intercept-url pattern="/rest-data*"
                            access="#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER'))"/>

    <security:custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER"/>
    <!--<security:access-denied-handler ref="oauthAccessDeniedHandler"/>-->
    <!--<security:expression-handler ref="oauthWebExpressionHandler"/>-->
  </security:http>

  <bean id="clientAuthenticationEntryPoint"
        class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"/>

  <!-- Common -->
  <security:authentication-manager id="clientAuthenticationManager">
    <security:authentication-provider user-service-ref="clientDetailsUserService"/>
  </security:authentication-manager>

  <bean id="clientDetailsUserService"
        class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
    <constructor-arg ref="clientDetails"/>
  </bean>

  <security:authentication-manager alias="authenticationManager">
    <security:authentication-provider>
      <security:user-service>
        <security:user name="user" password="pass" authorities="ROLE_USER"/>
      </security:user-service>
    </security:authentication-provider>
  </security:authentication-manager>

  <security:http pattern="/**" auto-config="true" use-expressions="true">
    <security:intercept-url pattern="/**" access="isAuthenticated()"/>
    <security:form-login/>
  </security:http>
</beans>